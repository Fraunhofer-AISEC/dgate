// Code generated by capnpc-go. DO NOT EDIT.

package main

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
)

type TimestampMessage capnp.Struct

// TimestampMessage_TypeID is the unique identifier for the type TimestampMessage.
const TimestampMessage_TypeID = 0xc33034afd6db2ee0

func NewTimestampMessage(s *capnp.Segment) (TimestampMessage, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return TimestampMessage(st), err
}

func NewRootTimestampMessage(s *capnp.Segment) (TimestampMessage, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return TimestampMessage(st), err
}

func ReadRootTimestampMessage(msg *capnp.Message) (TimestampMessage, error) {
	root, err := msg.Root()
	return TimestampMessage(root.Struct()), err
}

func (s TimestampMessage) String() string {
	str, _ := text.Marshal(0xc33034afd6db2ee0, capnp.Struct(s))
	return str
}

func (s TimestampMessage) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (TimestampMessage) DecodeFromPtr(p capnp.Ptr) TimestampMessage {
	return TimestampMessage(capnp.Struct{}.DecodeFromPtr(p))
}

func (s TimestampMessage) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s TimestampMessage) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s TimestampMessage) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s TimestampMessage) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s TimestampMessage) Repetition() uint16 {
	return capnp.Struct(s).Uint16(0)
}

func (s TimestampMessage) SetRepetition(v uint16) {
	capnp.Struct(s).SetUint16(0, v)
}

func (s TimestampMessage) Nonce() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return []byte(p.Data()), err
}

func (s TimestampMessage) HasNonce() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s TimestampMessage) SetNonce(v []byte) error {
	return capnp.Struct(s).SetData(0, v)
}

// TimestampMessage_List is a list of TimestampMessage.
type TimestampMessage_List = capnp.StructList[TimestampMessage]

// NewTimestampMessage creates a new list of TimestampMessage.
func NewTimestampMessage_List(s *capnp.Segment, sz int32) (TimestampMessage_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return capnp.StructList[TimestampMessage](l), err
}

// TimestampMessage_Future is a wrapper for a TimestampMessage promised by a client call.
type TimestampMessage_Future struct{ *capnp.Future }

func (f TimestampMessage_Future) Struct() (TimestampMessage, error) {
	p, err := f.Future.Ptr()
	return TimestampMessage(p.Struct()), err
}

const schema_9e69ec84d6f1f4cd = "x\xda\x12Hr`1\xe4\xdd\xcf\xc8\xc0\x14(\xc2\xca" +
	"\xf6\xff\x81\xde\xedk\xebM\x0c\x0e3\x04\xf232\xfe" +
	"?\xfb\xe5\xe3\xb5\x967\x99\xf3\x18X\x19\xd9\x19\x18\x0c" +
	"\x8f21\x0a^dg`\x10<[\xce\xa0\xfb?7" +
	"\xb5\xb881=\xb5\x98Y/9\xb1 \xaf\xc0*$" +
	"37\xb5\xb8$1\xb7\xc0\x17\"\xc1\x10\xc0\xc8\x18\xc8" +
	"\xc1\xcc\xc2\xc0\xc0\xc2\xc8\xc0 \xa8\x19\xc5\xc0\x10\xa8\xc1" +
	"\xcc\x18h\xc2\xc4\xc8\xc8(\xc2\x08\x1234b`\x08" +
	"\xd4af\x0c\xb4`b\xfc_\x94Z\x90Z\x92Y\x92" +
	"\xc9\xc0\x9c\x9f\xc7\xc8\xce\xc0\xc4\xc8\xce\xc0(\x9f\x97\x9f" +
	"\x97\x9c\xca\xc8\xcb\xc0\xc4\xc8\xcb\xc0\x08\x08\x00\x00\xff\xff" +
	"A\xfb+k"

func init() {
	schemas.Register(schema_9e69ec84d6f1f4cd,
		0xc33034afd6db2ee0)
}
